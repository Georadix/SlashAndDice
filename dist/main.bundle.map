{"version":3,"sources":["webpack:///./src/app/MapPane.ts","webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/app/CreatureSize.ts","webpack:///./src/app/Map.ts","webpack:///./src/app/MapState.ts","webpack:///./src/app/Token.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/game-state.service.ts","webpack:///./src/app/map.component.ts","webpack:///./src/environments/environment.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["export enum MapPane {\r\n    background = 0,\r\n    token = 1,\r\n    dm = 2\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/MapPane.ts","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 343;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 343\n// module chunks = 1","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { environment } from './environments/environment';\r\nimport { AppModule } from './app/app.module';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","export enum CreatureSize {\r\n    Small = 1.524,\r\n    Medium = 1.524,\r\n    Large = 3.048,\r\n    Huge = 4.572,\r\n    Gargantuan = 6.096,\r\n    Colossal = 9.144\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/CreatureSize.ts","import { MapPane } from './MapPane';\r\n\r\n/**\r\n * Represents a game map.\r\n */\r\nexport class Map {\r\n    private imageOverlay: L.ImageOverlay;\r\n    \r\n    /**\r\n     * Path to the map image.\r\n     */\r\n    public imageUrl: string;\r\n\r\n    /**\r\n     * Image width in meters.\r\n     */\r\n    public imageWidth: number;\r\n\r\n    /**\r\n     * Image height in meters.\r\n     */\r\n    public imageHeight: number;\r\n\r\n        /**\r\n     * Initializes a new instance of {Map}.\r\n     */\r\n    constructor(imageUrl: string, imageWidth: number, imageHeight: number) {\r\n        this.imageUrl = imageUrl;\r\n        this.imageWidth = imageWidth;\r\n        this.imageHeight = imageHeight;\r\n    }\r\n\r\n    public addToLayer(layer: L.LayerGroup): void {\r\n        if (this.imageOverlay) {\r\n            this.imageOverlay.remove();\r\n        } else {\r\n            let bounds = L.latLngBounds([[0, 0], [this.imageWidth, this.imageHeight]]);\r\n            this.imageOverlay = L.imageOverlay(this.imageUrl, bounds, {\r\n                pane: MapPane.background.toString()\r\n            });\r\n        }\r\n        layer.addLayer(this.imageOverlay);\r\n    }\r\n\r\n    public getBounds(): L.LatLngBounds {\r\n        return this.imageOverlay.getBounds();\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/Map.ts","import {Map} from './Map';\r\nimport {Token} from './Token';\r\n\r\n/**\r\n * Represents the state of a game map.\r\n */\r\nexport class MapState{\r\n    /**\r\n     * The map.\r\n     */\r\n    public map: Map;\r\n\r\n    /**\r\n     * List of tokens on the map.\r\n     */\r\n    public tokens: Token[];\r\n\r\n    /**\r\n     * Initializes a new instance of {MapState}.\r\n     */\r\n    constructor() {\r\n        this.tokens = [];\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/MapState.ts","import { CreatureSize } from './CreatureSize';\r\nimport { MapPane } from './MapPane';\r\n\r\n/**\r\n * Represents a token.\r\n */\r\nexport class Token {\r\n    private tokenPoly: L.Polygon;\r\n    private tokenOverlay: L.ImageOverlay;\r\n\r\n    /**\r\n     * Image URL of the token.\r\n     */\r\n    public imageUrl: string;\r\n\r\n    /**\r\n     * Position of the token on the map.\r\n     */\r\n    public position: L.LatLng;\r\n\r\n    /**\r\n     * Flag indicating wether to show the outline.\r\n     */\r\n    public showOutline: boolean;\r\n\r\n    /**\r\n     * The token size.\r\n     */\r\n    public size: CreatureSize;\r\n\r\n    /**\r\n     * Color of the token outline.\r\n     */\r\n    public outlineColor: string;\r\n\r\n    /**\r\n     * Initializes a new instance of {Token}.\r\n     */\r\n    constructor(imageUrl: string, position: L.LatLng, size: CreatureSize) {\r\n        this.imageUrl = imageUrl;\r\n        this.position = this.snapToGrid(position);\r\n        this.size = size;\r\n\r\n        this.outlineColor = '#f00';\r\n        this.showOutline = true;\r\n    }\r\n\r\n    public addToLayer(layer: L.LayerGroup): void {\r\n        if (this.tokenPoly) {\r\n            this.tokenOverlay.remove();\r\n        } else {\r\n            this.tokenPoly = L.polygon(\r\n                [this.position,\r\n                L.latLng(this.position.lat + this.size, this.position.lng),\r\n                L.latLng(this.position.lat + this.size, this.position.lng + this.size),\r\n                L.latLng(this.position.lat, this.position.lng + this.size)], {\r\n                draggable: true,\r\n                fillOpacity: 0,\r\n                pane: MapPane.token.toString()\r\n            });\r\n\r\n            this.tokenPoly.on('drag', (e) => {\r\n                this.tokenOverlay.setBounds(this.tokenPoly.getBounds());\r\n            });\r\n\r\n            this.tokenPoly.on('dragend', (e) => {\r\n                let sw = this.snapToGrid(this.tokenPoly.getBounds().getSouthWest());\r\n                this.tokenPoly.setLatLngs([sw,\r\n                L.latLng(sw.lat + this.size, sw.lng),\r\n                L.latLng(sw.lat + this.size, sw.lng + this.size),\r\n                L.latLng(sw.lat, sw.lng + this.size)]);\r\n                \r\n                this.tokenOverlay.setBounds(this.tokenPoly.getBounds());\r\n            });\r\n        }\r\n\r\n        if (this.tokenOverlay) {\r\n            this.tokenOverlay.remove();\r\n        } else {\r\n            this.tokenOverlay = L.imageOverlay(this.imageUrl, this.tokenPoly.getBounds(), {\r\n                interactive: true,\r\n                pane: MapPane.token.toString()\r\n            });\r\n        }\r\n\r\n        layer.addLayer(this.tokenPoly);\r\n        layer.addLayer(this.tokenOverlay);\r\n    }\r\n\r\n    private snapToGrid(latLng: L.LatLng): L.LatLng{\r\n        let lat = Math.round(latLng.lat / 1.524) * 1.524;\r\n        let lng = Math.round(latLng.lng / 1.524) * 1.524;\r\n        return L.latLng(lat, lng);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/Token.ts","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  template: '<slash-map></slash-map>',\r\n  styles: [`\r\n    :host {\r\n      height: 100%;\r\n    }\r\n    \r\n  `]\r\n})\r\nexport class AppComponent {\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpModule } from '@angular/http';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { MapComponent } from './map.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    MapComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    HttpModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Injectable } from '@angular/core';\r\nimport { MapState } from './MapState';\r\nimport { Map } from './Map';\r\nimport { Token } from './Token';\r\nimport { CreatureSize } from './CreatureSize';\r\n\r\n/**\r\n * Service for loading and saving game states.\r\n */\r\n@Injectable()\r\nexport class GameStateService {\r\n    /**\r\n     * Gets a map state.\r\n     */\r\n    public getMap(): MapState{\r\n        let tUrl = 'http://i.imgur.com/2okhBTl.png';\r\n        let map = new Map('http://imgur.com/KHt68Bj.png', 45.72, 45.72);\r\n        let token = new Token(tUrl, L.latLng(22.86, 22.86), CreatureSize.Medium);\r\n\r\n        let mapState = new MapState();\r\n        mapState.map = map;\r\n        mapState.tokens.push(token);\r\n\r\n        return mapState;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game-state.service.ts","import { Component, OnInit } from '@angular/core';\r\nimport { GameStateService } from './game-state.service';\r\nimport { MapPane } from './MapPane';\r\n\r\n@Component({\r\n    providers: [GameStateService],\r\n    selector: 'slash-map',\r\n    template: '<div id=\"map\"></div>',\r\n    styles: [`\r\n    :host, #map {\r\n      height: 100%;\r\n    }\r\n    .leaflet-container {\r\n        background: #000;\r\n        outline: 0;\r\n    }\r\n  `]\r\n})\r\nexport class MapComponent implements OnInit{\r\n    map: L.Map;\r\n    backgroundPane: string = 'backgroundMaps';\r\n    backgroundLayer: L.LayerGroup;\r\n    tokenLayer: L.LayerGroup;\r\n\r\n    /**\r\n     * Initializes a new instance of {MapComponent}.\r\n     */\r\n    constructor(private gameStateService: GameStateService) {\r\n\r\n     }\r\n\r\n    ngOnInit(): void {\r\n        this.map = L.map('map', {\r\n            crs: L.CRS.Simple,\r\n            minZoom: 4,\r\n            maxZoom: 8\r\n        });\r\n\r\n        this.map.createPane(MapPane.background.toString());\r\n        this.map.getPane(MapPane.background.toString()).style.zIndex = '399';\r\n        this.map.createPane(MapPane.token.toString());\r\n        this.map.getPane(MapPane.token.toString()).style.zIndex = '401';\r\n\r\n        this.backgroundLayer = L.layerGroup([]);\r\n        this.map.addLayer(this.backgroundLayer);\r\n        this.backgroundLayer.setZIndex(0);\r\n\r\n        this.tokenLayer = L.layerGroup([]);\r\n        this.map.addLayer(this.tokenLayer);\r\n        this.tokenLayer.setZIndex(10);\r\n\r\n        L.control.layers({'Map': this.backgroundLayer}, {'Tokens': this.tokenLayer}). addTo(this.map);\r\n\r\n        let mapState = this.gameStateService.getMap();\r\n\r\n        this.addMapScale();\r\n        mapState.map.addToLayer(this.backgroundLayer);\r\n        this.map.fitBounds(mapState.map.getBounds());\r\n        mapState.tokens.forEach((token) => {\r\n            token.addToLayer(this.tokenLayer);\r\n        });\r\n    }\r\n\r\n    private addMapScale(): void {\r\n        let options = {\r\n            interval: 1.524,\r\n            showOriginLabel: false,\r\n            redraw: '',\r\n            pane: this.backgroundPane\r\n        };\r\n\r\n        this.backgroundLayer.addLayer(L.simpleGraticule(options));\r\n        L.control.scale({\r\n            imperial: true,\r\n            metric: false,\r\n\r\n        }).addTo(this.map);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/map.component.ts","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts"],"sourceRoot":""}